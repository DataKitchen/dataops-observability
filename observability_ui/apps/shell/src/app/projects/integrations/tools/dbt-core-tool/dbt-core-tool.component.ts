import { Component } from '@angular/core';
import { AbstractTool } from '../abstract-tool.directive';
import { MatIconModule } from '@angular/material/icon';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatLegacyButtonModule } from '@angular/material/legacy-button';
import { ServiceKeyFormComponent } from '../../service-key-form/service-key-form.component';
import { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { AlertComponent, CodeSnippetComponent, TextFieldModule } from '@observability-ui/ui';
import { RouterModule } from '@angular/router';
import { MatLegacyFormFieldModule } from '@angular/material/legacy-form-field';
import { MatLegacySelectModule } from '@angular/material/legacy-select';
import { CustomValidators } from '@observability-ui/core';

@Component({
  // eslint-disable-next-line @angular-eslint/component-selector
  selector: 'dbt-core-tool',
  templateUrl: 'dbt-core-tool.component.html',
  styleUrls: [ '../tools-common.scss' ],
  imports: [
    CommonModule,
    RouterModule,
    ReactiveFormsModule,

    MatIconModule,
    MatExpansionModule,
    MatLegacyButtonModule,
    TextFieldModule,
    MatLegacySelectModule,
    MatLegacyFormFieldModule,

    AlertComponent,
    CodeSnippetComponent,
    ServiceKeyFormComponent,
  ],
  standalone: true,
})
export class DBTCoreToolComponent extends AbstractTool {
  static override _name = 'dbt_core';
  static override _displayName = 'dbt Core';
  static override _icon = 'dbt_core';
  static override _type = 'EVENTS';
  static override _image = 'docker.io/datakitchen/dbt-core-connector';

  override readonly envList = [
    { name: 'EVENTS_API_HOST', placeholder: '# the base API URL for Observability', required: true },
    { name: 'EVENTS_API_KEY', placeholder: '# an API key for the Observability project', required: true },
    { name: 'PIPELINE_NAME', placeholder: '# a unique name for this dbt job', required: true },
    { name: 'PIPELINE_KEY', placeholder: '# a unique key for this dbt job', required: true },
    { name: 'RUN_RESULTS_PATH', placeholder: '# the path to the run_results.json file generated by dbt', required: true },
    { name: 'MANIFEST_PATH', placeholder: '# the path to the manifest.json file generated by dbt', required: true },
  ];

  override envListForm = new FormGroup({
    EVENTS_API_HOST: new FormControl('', Validators.required),
    EVENTS_API_KEY: new FormControl('', Validators.required),
    PIPELINE_NAME: new FormControl('', Validators.required),
    PIPELINE_KEY: new FormControl('', Validators.required),
    RUN_RESULTS_PATH: new FormControl('', Validators.required),
    MANIFEST_PATH: new FormControl('', Validators.required),
    DOCKER_TAG: new FormControl('', [ Validators.required ]),
    DEFAULT_DEPLOYMENT_MODE: new FormControl('docker', [ Validators.required, CustomValidators.oneOf([ 'docker', 'kubernetes' ]) ]),
  });
}
