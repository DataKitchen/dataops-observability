{{- if .Values.observability_api.enable }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "observability.observability_api.name" . }}
  labels:
    {{- include "observability.labels" . | nindent 4 }}
    {{- include "observability.observability_api.selectorLabels" . | nindent 4 }}
    {{- include "observability.scaledownPreDeploy" .Values.observability_api | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.observability_api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "observability.observability_api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # Used to force Helm to trigger a re-deploy despite this manifest haven't changed
        timestamp: {{ now | quote }}
        {{- with .Values.observability_api.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "observability.observability_api.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "observability.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.observability_api.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "observability.observability_api.name" . }}
          securityContext:
            {{- toYaml .Values.observability_api.securityContext | nindent 12 }}
          image: {{ include "observability.observability_api.image" . | quote }}
          imagePullPolicy: {{ .Values.observability_api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.observability_api.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.observability_api.resources | nindent 12 }}
          env:
            {{- include "observability.environment.base" . | nindent 12 }}
            {{- include "observability.environment.database" . | nindent 12 }}
            {{- include "observability.environment.flask" . | nindent 12 }}
            - name: GUNICORN_CMD_ARGS
              value: "--bind 0.0.0.0:{{ .Values.observability_api.service.port }}"
            {{- if .Values.observability_api.hostname }}
            - name: OBSERVABILITY_API_HOSTNAME
              value: {{ tpl .Values.observability_api.hostname . | quote }}
            {{- end }}
            {{- if ne .Values.observability.config_type "minikube" }}
            - name: OBSERVABILITY_KEY_FLASK_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.observability.keys_secrets_name | quote }}
                  key: OBSERVABILITY_KEY_FLASK_SECRET
            {{- end }}
          command: [ "/dk/bin/gunicorn" ]
          args: [ "-c", "/dk/gunicorn.conf.py", "observability_api.app:app" ]
          readinessProbe:
            periodSeconds: 20
            timeoutSeconds: 5
            httpGet:
              path: /observability/readyz
              port: 5000
              httpHeaders:
                {{- if .Values.observability_api.hostname }}
                - name: Host
                  value: {{ tpl .Values.observability_api.hostname . | quote }}
                {{- end }}
      {{- with .Values.observability_api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.observability_api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.observability_api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "observability.observability_api.name" . }}
  labels:
    {{- include "observability.labels" . | nindent 4 }}
    {{- include "observability.observability_api.selectorLabels" . | nindent 4 }}
spec:
  type: {{ .Values.observability_api.service.type }}
  ports:
    - name: http
      port: {{ .Values.observability_api.service.port }}
      targetPort: http
      protocol: TCP
      {{- if eq .Values.observability_api.service.type "NodePort" }}
      nodePort: {{ .Values.observability_api.service.nodePort }}
      {{- end }}
  selector:
    {{- include "observability.observability_api.selectorLabels" . | nindent 4 }}
{{- end }}
